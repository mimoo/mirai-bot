name: cargo_dephell

# Why `on: repository_dispatch`?
#
# If we trigger this action on pull_request events,
# then it will run with the forked repo GITHUB_TOKEN
# this is a problem as it won't allow the action to write
# a comment on the PR in the last step.
#
# instead, we trigger this remotely via a bot we're running ourselves.
on:
  repository_dispatch:
    types: [new_PR]

jobs:
  run_cargo_dephell:
    runs-on: ubuntu-latest

    steps:
      - name: Who triggered this?
        env:
          PULL_ID: ${{ github.event.client_payload.pull_id }}
        run: |
          echo "action triggerd by https://github.com/libra/libra/pull/$PULL_ID"

      - name: Checkout the PR
        if: success()
        uses: actions/checkout@v2
        with:
          path: "libra"
          fetch-depth: 50 # this is to make sure we obtain the target base commit
          repository: ${{ github.event.client_payload.owner }}/${{ github.event.client_payload.repo }} # repo of the forked libra/libra
          ref: ${{ github.event.client_payload.pull_ref }} # commit that triggered the PR

      - name: run cargo dephell
        if: success()
        working-directory: ./libra
        timeout-minutes: 60
        env:
          TOKEN: ${{secrets.MIRAI_BOT}}
        run: |
          set -x

          # update rust and get dephell
          rustup update
          cargo install cargo-dephell

          # run dephell
          cargo cargo dephell -o report.html --github-token MIRAI-bot:$TOKEN

      - name: upload html report
        uses: actions/upload-artifact@v2
        with:
          name: dephell_report
          path: libra/report.html
