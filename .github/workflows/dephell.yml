name: cargo_dephell

# Why `on: repository_dispatch`?
#
# If we trigger this action on pull_request events,
# then it will run with the forked repo GITHUB_TOKEN
# this is a problem as it won't allow the action to write
# a comment on the PR in the last step.
#
# instead, we trigger this remotely via a bot we're running ourselves.
on:
  repository_dispatch:
    types: [new_PR]

jobs:
  run_cargo_dephell:
    runs-on: ubuntu-latest

    steps:
      - name: Who triggered this?
        env:
          PULL_ID: ${{ github.event.client_payload.pull_id }}
        run: |
          echo "action triggerd by https://github.com/diem/diem/pull/$PULL_ID"

      - name: Only run on dependabot
        uses: actions/github-script@0.5.0
        env:
          PULL_ID: ${{ github.event.client_payload.pull_id }}
        with:
          github-token: ${{secrets.MIRAI_BOT}}
          script: |
            const fs = require('fs');
            var path = require('path');

            async function main() {
              // get info on PR
              const pullrequest = await github.pulls.get({
                owner: "diem",
                repo: "diem",
                pull_number: process.env.PULL_ID
              });

              // allowlist
              var allowlist = ["dependabot[bot]"];
              if (!allowlist.includes(pullrequest.data.user.login)) {
                throw "not a dependabot PR";
              }
            }

            main();

      - name: Checkout master
        if: success()
        uses: actions/checkout@v2
        with:
          path: "master"
          fetch-depth: 1 # this is to make sure we obtain the target base commit
          repository: diem/diem # repo of the forked diem/diem
          ref: master # commit that triggered the PR

      - name: Checkout the PR
        if: success()
        uses: actions/checkout@v2
        with:
          path: "pull_request"
          fetch-depth: 50 # this is to make sure we obtain the target base commit
          repository: ${{ github.event.client_payload.owner }}/${{ github.event.client_payload.repo }} # repo of the forked diem/diem
          ref: ${{ github.event.client_payload.pull_ref }} # commit that triggered the PR

      - name: Checkout cargo-diff
        if: success()
        uses: actions/checkout@v2
        with:
          path: "cargo-diff"
          fetch-depth: 1 # this is to make sure we obtain the target base commit
          repository: jnaulty/cargo-diff # repo of the forked diem/diem
          ref: master # commit that triggered the PR

      - name: run cargo-diff
        run: |
          set -x
          set -e

          # generate summaries
          cd master 
          cargo x generate-summaries
          cd .. 
          cd pull_request 
          cargo x generate-summaries

          # output some json
          cargo x diff-summary ../master/target/summaries/summary-release.toml target/summaries/summary-release.toml json > ../guppy_output
          cat ../guppy_output

          # run cargo-diff
          cd ../cargo-diff
          sudo npm install -g diff2html-cli
          pip3 install requests
          python3 diff.py --guppy ../guppy_output

          # zip diffs
          mkdir diffs
          mv *.html diffs/
          zip -r diffs.zip diffs

      - name: upload diff-summary
        uses: actions/upload-artifact@v2
        with:
          name: crates_diffs
          path: cargo-diff/diffs.zip

      - name: run cargo dephell
        if: success()
        working-directory: ./pull_request
        timeout-minutes: 60
        env:
          TOKEN: ${{secrets.MIRAI_BOT}}
        run: |
          set -x

          # update rust and get dephell
          rustup update
          cargo install cargo-dephell

          # run dephell
          cargo dephell -o report.html --github-token MIRAI-bot:$TOKEN

      - name: upload html report
        uses: actions/upload-artifact@v2
        with:
          name: dephell_report
          path: pull_request/report.html

      - name: link to report
        run: |
          echo "https://github.com/mimoo/mirai-bot/actions/runs/$GITHUB_RUN_ID"

      - name: Write comment on PR
        if: success()
        uses: actions/github-script@0.5.0
        env:
          PULL_ID: ${{ github.event.client_payload.pull_id }}
          OWNER: ${{ github.event.client_payload.owner }}
        with:
          github-token: ${{secrets.MIRAI_BOT}}
          script: |
            const fs = require('fs');
            var path = require('path');

            async function main() {
              // create the message
              var message = `Hello here!

            I'm here to help you review this dependency update.
            You can check out the #dephell report, as well as any diffs that could be generated from crates.io here: https://github.com/mimoo/mirai-bot/actions/runs/` + process.env.GITHUB_RUN_ID + `
            `;

              // delete previous comments from MIRAI-BOT that includes the tag "#dephell"
              const comments = await github.issues.listComments({
                owner: "diem",
                repo: "diem",
                issue_number: process.env.PULL_ID
              });
              for (let comment of comments.data) {
                if (comment.user.login === "MIRAI-bot" && comment.body.includes("#dephell")) {
                  await github.issues.deleteComment({
                    owner: "diem",
                    repo: "diem",
                    comment_id: comment.id
                  });
                }
              }

              // comment
              await github.issues.createComment({
                owner: "diem",
                repo: "diem",
                issue_number: process.env.PULL_ID,
                body: message
              });
              console.log(message);
            }

            main();
